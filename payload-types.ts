/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    admins: AdminAuthOperations;
  };
  collections: {
    admins: Admin;
    cache: Cache;
    'gdf-pages': GdfPage;
    'hdm-persons': HdmPerson;
    'hdm-cover-arts': HdmCoverArt;
    'hdm-releases': HdmRelease;
    'hdm-contribution-roles': HdmContributionRole;
    'hdm-genres': HdmGenre;
    'hdm-songs': HdmSong;
    'rcps-recipes': Recipe;
    'rcps-images': RcpsImage;
    'rcps-sources': RcpsSource;
    'rcps-quantity-types': QuantityType;
    'rcps-ingredients': Ingredient;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    admins: AdminsSelect<false> | AdminsSelect<true>;
    cache: CacheSelect<false> | CacheSelect<true>;
    'gdf-pages': GdfPagesSelect<false> | GdfPagesSelect<true>;
    'hdm-persons': HdmPersonsSelect<false> | HdmPersonsSelect<true>;
    'hdm-cover-arts': HdmCoverArtsSelect<false> | HdmCoverArtsSelect<true>;
    'hdm-releases': HdmReleasesSelect<false> | HdmReleasesSelect<true>;
    'hdm-contribution-roles': HdmContributionRolesSelect<false> | HdmContributionRolesSelect<true>;
    'hdm-genres': HdmGenresSelect<false> | HdmGenresSelect<true>;
    'hdm-songs': HdmSongsSelect<false> | HdmSongsSelect<true>;
    'rcps-recipes': RcpsRecipesSelect<false> | RcpsRecipesSelect<true>;
    'rcps-images': RcpsImagesSelect<false> | RcpsImagesSelect<true>;
    'rcps-sources': RcpsSourcesSelect<false> | RcpsSourcesSelect<true>;
    'rcps-quantity-types': RcpsQuantityTypesSelect<false> | RcpsQuantityTypesSelect<true>;
    'rcps-ingredients': RcpsIngredientsSelect<false> | RcpsIngredientsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: 'en' | 'es' | 'de';
  user: Admin & {
    collection: 'admins';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface AdminAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins".
 */
export interface Admin {
  id: string;
  superadmin?: boolean | null;
  tenants?: ('hannesdiem.de' | 'hannesdiercks.de' | 'rezepte.roxanna-diercks.de' | 'dein-gedankenfluss.de')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cache".
 */
export interface Cache {
  id: string;
  key: string;
  expires: number;
  value: {
    value: unknown;
    metadata: {
      createdTime: number;
      ttl?: number | null;
      swr?: number | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gdf-pages".
 */
export interface GdfPage {
  id: string;
  title: string;
  slug: string;
  content?:
    | {
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'richtext';
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-persons".
 */
export interface HdmPerson {
  id: string;
  name: string;
  link?: string | null;
  ogProfile?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-cover-arts".
 */
export interface HdmCoverArt {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-releases".
 */
export interface HdmRelease {
  id: string;
  title: string;
  slug: string;
  subtitle?: string | null;
  artist?: string | null;
  releaseDate?: string | null;
  hideReleaseDay?: boolean | null;
  cover?: (string | null) | HdmCoverArt;
  contributors?:
    | {
        person: string | HdmPerson;
        roles: (string | HdmContributionRole)[];
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  genres?: (string | HdmGenre)[] | null;
  languages?: ('english' | 'german')[] | null;
  summary?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  tracks?:
    | {
        title: string;
        addition?: string | null;
        duration?: number | null;
        song?: (string | null) | HdmSong;
        id?: string | null;
      }[]
    | null;
  shops?: {
    amazonmusic?: string | null;
    deezer?: string | null;
    qobuz?: string | null;
    tidal?: string | null;
    spotify?: string | null;
    anghami?: string | null;
    applemusic?: string | null;
    pandora?: string | null;
    youtubemusic?: string | null;
    awa?: string | null;
    soundcloud?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-contribution-roles".
 */
export interface HdmContributionRole {
  id: string;
  role: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-genres".
 */
export interface HdmGenre {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-songs".
 */
export interface HdmSong {
  id: string;
  title: string;
  subtitle?: string | null;
  slug: string;
  sumrary?: string | null;
  creationDate?: string | null;
  hideCreationDay?: boolean | null;
  authors?:
    | {
        person: string | HdmPerson;
        roles: (string | HdmContributionRole)[];
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  lyrics?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rcps-recipes".
 */
export interface Recipe {
  id: string;
  uuid?: string | null;
  name: string;
  /**
   * Overall “prep” duration in minutes, if needed.
   */
  duration?: number | null;
  /**
   * Overall “cooking” duration in minutes, if needed.
   */
  cookingDuration?: number | null;
  serves?: number | null;
  defaultScale?: number | null;
  source?: (string | null) | RcpsSource;
  'ingredient-sections'?:
    | {
        /**
         * Can be empty when there is only one section
         */
        title?: string | null;
        'section-ingredients'?:
          | {
              quantity: number;
              'quantity-type': string | QuantityType;
              ingredient: string | Ingredient;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  'step-sections'?:
    | {
        /**
         * Can be empty when there is only one section
         */
        title?: string | null;
        'section-steps'?:
          | {
              step?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  images?:
    | {
        image?: (string | null) | RcpsImage;
        id?: string | null;
      }[]
    | null;
  notes?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  neutritionalInfo?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rcps-sources".
 */
export interface RcpsSource {
  id: string;
  name: string;
  url: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rcps-quantity-types".
 */
export interface QuantityType {
  id: string;
  name: string;
  singular?: string | null;
  plural?: string | null;
  fraction?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rcps-ingredients".
 */
export interface Ingredient {
  id: string;
  name: string;
  plural: string;
  recipe?: (string | null) | Recipe;
  affiliateUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rcps-images".
 */
export interface RcpsImage {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'admins';
        value: string | Admin;
      } | null)
    | ({
        relationTo: 'cache';
        value: string | Cache;
      } | null)
    | ({
        relationTo: 'gdf-pages';
        value: string | GdfPage;
      } | null)
    | ({
        relationTo: 'hdm-persons';
        value: string | HdmPerson;
      } | null)
    | ({
        relationTo: 'hdm-cover-arts';
        value: string | HdmCoverArt;
      } | null)
    | ({
        relationTo: 'hdm-releases';
        value: string | HdmRelease;
      } | null)
    | ({
        relationTo: 'hdm-contribution-roles';
        value: string | HdmContributionRole;
      } | null)
    | ({
        relationTo: 'hdm-genres';
        value: string | HdmGenre;
      } | null)
    | ({
        relationTo: 'hdm-songs';
        value: string | HdmSong;
      } | null)
    | ({
        relationTo: 'rcps-recipes';
        value: string | Recipe;
      } | null)
    | ({
        relationTo: 'rcps-images';
        value: string | RcpsImage;
      } | null)
    | ({
        relationTo: 'rcps-sources';
        value: string | RcpsSource;
      } | null)
    | ({
        relationTo: 'rcps-quantity-types';
        value: string | QuantityType;
      } | null)
    | ({
        relationTo: 'rcps-ingredients';
        value: string | Ingredient;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'admins';
    value: string | Admin;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'admins';
    value: string | Admin;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins_select".
 */
export interface AdminsSelect<T extends boolean = true> {
  superadmin?: T;
  tenants?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cache_select".
 */
export interface CacheSelect<T extends boolean = true> {
  key?: T;
  expires?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gdf-pages_select".
 */
export interface GdfPagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  content?:
    | T
    | {
        richtext?:
          | T
          | {
              content?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-persons_select".
 */
export interface HdmPersonsSelect<T extends boolean = true> {
  name?: T;
  link?: T;
  ogProfile?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-cover-arts_select".
 */
export interface HdmCoverArtsSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-releases_select".
 */
export interface HdmReleasesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  subtitle?: T;
  artist?: T;
  releaseDate?: T;
  hideReleaseDay?: T;
  cover?: T;
  contributors?:
    | T
    | {
        person?: T;
        roles?: T;
        description?: T;
        id?: T;
      };
  genres?: T;
  languages?: T;
  summary?: T;
  description?: T;
  tracks?:
    | T
    | {
        title?: T;
        addition?: T;
        duration?: T;
        song?: T;
        id?: T;
      };
  shops?:
    | T
    | {
        amazonmusic?: T;
        deezer?: T;
        qobuz?: T;
        tidal?: T;
        spotify?: T;
        anghami?: T;
        applemusic?: T;
        pandora?: T;
        youtubemusic?: T;
        awa?: T;
        soundcloud?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-contribution-roles_select".
 */
export interface HdmContributionRolesSelect<T extends boolean = true> {
  role?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-genres_select".
 */
export interface HdmGenresSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hdm-songs_select".
 */
export interface HdmSongsSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  slug?: T;
  sumrary?: T;
  creationDate?: T;
  hideCreationDay?: T;
  authors?:
    | T
    | {
        person?: T;
        roles?: T;
        description?: T;
        id?: T;
      };
  lyrics?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rcps-recipes_select".
 */
export interface RcpsRecipesSelect<T extends boolean = true> {
  uuid?: T;
  name?: T;
  duration?: T;
  cookingDuration?: T;
  serves?: T;
  defaultScale?: T;
  source?: T;
  'ingredient-sections'?:
    | T
    | {
        title?: T;
        'section-ingredients'?:
          | T
          | {
              quantity?: T;
              'quantity-type'?: T;
              ingredient?: T;
              id?: T;
            };
        id?: T;
      };
  'step-sections'?:
    | T
    | {
        title?: T;
        'section-steps'?:
          | T
          | {
              step?: T;
              id?: T;
            };
        id?: T;
      };
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  notes?: T;
  neutritionalInfo?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rcps-images_select".
 */
export interface RcpsImagesSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rcps-sources_select".
 */
export interface RcpsSourcesSelect<T extends boolean = true> {
  name?: T;
  url?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rcps-quantity-types_select".
 */
export interface RcpsQuantityTypesSelect<T extends boolean = true> {
  name?: T;
  singular?: T;
  plural?: T;
  fraction?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rcps-ingredients_select".
 */
export interface RcpsIngredientsSelect<T extends boolean = true> {
  name?: T;
  plural?: T;
  recipe?: T;
  affiliateUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}